[package]
name = "vrc-get-gui"
version = "0.1.14-beta.0"
description = "A Tauri App"

homepage.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
edition.workspace = true

[build-dependencies]
flate2 = "1.0.30"
tar = "0.4.41"
tauri-build = { version = "1.5.3", features = [ "config-toml" ] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.7.1", features = [ "updater", "config-toml", "dialog", "linux-protocol-headers" ] }
vrc-get-vpm = { path = "../vrc-get-vpm", features = ["experimental-project-management", "experimental-unity-management", "tokio"] }
reqwest = "0.12.5"
specta = { version = "1.0.5", features = [ "chrono", "url" ] }
tauri-specta = { version = "1.0.2", features = ["typescript"] }
open = "5.3.0"
arc-swap = "1.7.1"
log = { version = "0.4.22", features = [ "std" ] }
chrono = { version = "0.4.38", features = [ "serde" ] }
ringbuffer = "0.15.0"
tokio = { version = "1.39.2", features = ["process"] }
fs_extra = "1.3.0"
indexmap = "2.2.6"
futures = "0.3.30"
tar = "0.4.41"
flate2 = "1.0.30"
uuid = { version = "1.10.0", features = ["v4"] }
trash = "5.0.0"
async_zip = { version = "0.0.17", features = ["deflate", "tokio"] }
async-stream = "0.3.5"
tauri-plugin-single-instance = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
sys-locale = "0.3.1"
log-panics = { version = "2", features = ["with-backtrace"] }
url = "2.5.2"
dirs-next = "2.0.0"

[target.'cfg(windows)'.dependencies]
windows = { version = "0.58.0", features = ["Win32_Storage_FileSystem", "Win32_System_IO", "Win32_NetworkManagement_IpHelper", "Wdk_System_SystemServices", "Win32_System_SystemInformation"] }
winreg = "0.52.0"

[target.'cfg(target_os = "macos")'.dependencies]
objc = "0.2.7"
cocoa = "0.24"

[target.'cfg(unix)'.dependencies]
nix = { version = "0.29.0", features = ["fs"] }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]

# rustc-check-cfg is not supported by tauri 1.x yet so we need to ignore it
# https://github.com/tauri-apps/tauri/pull/10392
[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(dev)'] }
